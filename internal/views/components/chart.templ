package components

import "movie-matcher/internal/views/types"

templ TimeseriesAreaChart[T types.Number](timeseries []types.TimePoint[T]) {
	<script src="/public/flowbite.min.js"></script>
	<script src="/public/apexcharts.min.js"></script>
	<data id="data" value={ templ.JSONString(intoData(timeseries)) }></data>
	<data id="categories" value={ templ.JSONString(intoXAxisLabel(timeseries)) }></data>
	<script type="text/javascript">
        const data = JSON.parse(document.getElementById('data').value);
        const categories = JSON.parse(document.getElementById('categories').value);

		const options = {
		chart: {
			height: "100%",
			maxWidth: "100%",
			type: "area",
			fontFamily: "Inter, sans-serif",
			dropShadow: {
			enabled: false,
			},
			toolbar: {
			show: false,
			},
		},
		tooltip: {
			enabled: true,
			x: {
			show: false,
			},
		},
		fill: {
			type: "gradient",
			gradient: {
			opacityFrom: 0.55,
			opacityTo: 0,
			shade: "#1C64F2",
			gradientToColors: ["#1C64F2"],
			},
		},
		dataLabels: {
			enabled: false,
		},
		stroke: {
			width: 6,
		},
		grid: {
			show: false,
			strokeDashArray: 4,
			padding: {
			left: 2,
			right: 2,
			top: 0
			},
		},
		series: [
			{
			name: "New users",
			data: data,
			color: "#1A56DB",
			},
		],
		xaxis: {
			categories: categories,
			labels: {
			show: false,
			},
			axisBorder: {
			show: false,
			},
			axisTicks: {
			show: false,
			},
		},
		yaxis: {
			show: false,
		},
		}

		if (document.getElementById("area-chart") && typeof ApexCharts !== 'undefined') {
		const chart = new ApexCharts(document.getElementById("area-chart"), options);
		chart.render();
		}
</script>
}

func intoData[T types.Number](timeseries []types.TimePoint[T]) []T {
	data := make([]T, len(timeseries))

	for i, point := range timeseries {
		data[i] = point.Value
	}

	return data
}

func intoXAxisLabel[T types.Number](timeseries []types.TimePoint[T]) []string {
	labels := make([]string, len(timeseries))

	for i, point := range timeseries {
		labels[i] = point.Time.Format("02 January")
	}

	return labels
}
